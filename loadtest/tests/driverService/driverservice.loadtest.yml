config:
  target: "http://localhost:5002"
  socketio:
    transports: ["websocket"]
  processor: "./customFunctions.js"
  phases: # 50 users every second for 30 seconds
    - duration: 30
      arrivalRate: 500

scenarios:
  - name: Client Scenario
    weight: 1 # 1 / 5 = 20% chance
    engine: "socketio"
    flow:
      - function: "getPackageID"
      - emit:
          namespace: "/clients"
          channel: "subscribe_to_driver_coordinates"
          data: "{{ packageID }}"
      - think: 300 # do nothing for 5 and disconnect (approximately the same amount of time it takes the driver to drive his route)

  - name: Driver Scenario
    weight: 4 # 4 / 5 = 80% chance
    engine: "socketio"
    flow:
      - function: "login"
      - emit:
          namespace: "/drivers"
          channel: "authenticate"
          data:
            token: "{{ token }}"
      - function: "setupData"
      - emit:
          namespace: "/drivers"
          channel: "delivery_start"
          data:
            packages: "{{ packages }}"
      - loop:
        - function: "getCoordinate"
        - emit:
            namespace: "/drivers"
            channel: "new_coordinates"
            data:
              coordinate: "{{Â coordinate }}"
        - think: 3
        count: 100
